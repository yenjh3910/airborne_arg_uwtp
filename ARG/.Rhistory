arg_subtype <- arg_subtype %>% mutate(ODP = ODP1 + ODP2 + ODP3 + ODP4 + ODP5)
arg_subtype <- arg_subtype %>% select(subtype, AT, ARP, ODP)
arg_subtype$AT[!(arg_subtype$AT == 0)] <- arg_subtype[1,]
# Read ARG_subtype file (Something wrong with read.table, so read by )
arg_subtype <- read.xlsx("../../airborne_arg_uwtp_result/args_oap/ARG/stage_two_output/normalized_cell.subtype.xlsx",
sheet = 1)
# Merge sample to sample type
arg_subtype <- arg_subtype %>% mutate(AT = AT1 + AT2 + AT3 + AT4 + AT5)
arg_subtype <- arg_subtype %>% mutate(ARP = ARP1 + ARP2 + ARP3 + ARP4 + ARP5)
arg_subtype <- arg_subtype %>% mutate(ODP = ODP1 + ODP2 + ODP3 + ODP4 + ODP5)
arg_subtype <- arg_subtype %>% select(subtype, AT, ARP, ODP)
arg_subtype$AT[!(arg_subtype$AT == 0)] <- arg_subtype[,1]
# Read ARG_subtype file (Something wrong with read.table, so read by )
arg_subtype <- read.xlsx("../../airborne_arg_uwtp_result/args_oap/ARG/stage_two_output/normalized_cell.subtype.xlsx",
sheet = 1)
# First column to row name
row.names(arg_subtype) <- arg_subtype$subtype
# Read ARG_subtype file (Something wrong with read.table, so read by )
arg_subtype <- read.xlsx("../../airborne_arg_uwtp_result/args_oap/ARG/stage_two_output/normalized_cell.subtype.xlsx",
sheet = 1)
# Merge sample to sample type
arg_subtype <- arg_subtype %>% mutate(AT = AT1 + AT2 + AT3 + AT4 + AT5)
arg_subtype <- arg_subtype %>% mutate(ARP = ARP1 + ARP2 + ARP3 + ARP4 + ARP5)
arg_subtype <- arg_subtype %>% mutate(ODP = ODP1 + ODP2 + ODP3 + ODP4 + ODP5)
arg_subtype <- arg_subtype %>% select(subtype, AT, ARP, ODP)
arg_subtype$AT[!(arg_subtype$AT == 0)] <- arg_subtype$subtype
# Read ARG_subtype file (Something wrong with read.table, so read by )
arg_subtype <- read.xlsx("../../airborne_arg_uwtp_result/args_oap/ARG/stage_two_output/normalized_cell.subtype.xlsx",
sheet = 1)
# Merge sample to sample type
arg_subtype <- arg_subtype %>% mutate(AT = AT1 + AT2 + AT3 + AT4 + AT5)
arg_subtype <- arg_subtype %>% mutate(ARP = ARP1 + ARP2 + ARP3 + ARP4 + ARP5)
arg_subtype <- arg_subtype %>% mutate(ODP = ODP1 + ODP2 + ODP3 + ODP4 + ODP5)
arg_subtype <- arg_subtype %>% select(subtype, AT, ARP, ODP)
# Read ARG_subtype file (Something wrong with read.table, so read by )
arg_subtype <- read.xlsx("../../airborne_arg_uwtp_result/args_oap/ARG/stage_two_output/normalized_cell.subtype.xlsx",
sheet = 1)
# First column to row name
row.names(arg_subtype) <- arg_subtype$subtype
arg_subtype <- arg_subtype[,-1]
# Merge sample to sample type
arg_subtype <- arg_subtype %>% mutate(AT = AT1 + AT2 + AT3 + AT4 + AT5)
arg_subtype <- arg_subtype %>% mutate(ARP = ARP1 + ARP2 + ARP3 + ARP4 + ARP5)
arg_subtype <- arg_subtype %>% mutate(ODP = ODP1 + ODP2 + ODP3 + ODP4 + ODP5)
arg_subtype <- arg_subtype %>% select(subtype, AT, ARP, ODP)
arg_subtype <- arg_subtype %>% select(\AT, ARP, ODP)
arg_subtype <- arg_subtype %>% select(AT, ARP, ODP)
arg_subtype$AT[!(arg_subtype$AT == 0)] <- row.names(arg_subtype)
# Read ARG_subtype file (Something wrong with read.table, so read by )
arg_subtype <- read.xlsx("../../airborne_arg_uwtp_result/args_oap/ARG/stage_two_output/normalized_cell.subtype.xlsx",
sheet = 1)
# First column to row name
row.names(arg_subtype) <- arg_subtype$subtype
arg_subtype <- arg_subtype[,-1]
# Merge sample to sample type
arg_subtype <- arg_subtype %>% mutate(AT = AT1 + AT2 + AT3 + AT4 + AT5)
arg_subtype <- arg_subtype %>% mutate(ARP = ARP1 + ARP2 + ARP3 + ARP4 + ARP5)
arg_subtype <- arg_subtype %>% mutate(ODP = ODP1 + ODP2 + ODP3 + ODP4 + ODP5)
arg_subtype <- arg_subtype %>% select(AT, ARP, ODP)
if (!(arg_subtype$AT == 0)) {arg_subtype$AT[!(arg_subtype$AT == 0)] = row.names(arg_subtype)}
# Read ARG_subtype file (Something wrong with read.table, so read by )
arg_subtype <- read.xlsx("../../airborne_arg_uwtp_result/args_oap/ARG/stage_two_output/normalized_cell.subtype.xlsx",
sheet = 1)
# First column to row name
row.names(arg_subtype) <- arg_subtype$subtype
arg_subtype <- arg_subtype[,-1]
# Merge sample to sample type
arg_subtype <- arg_subtype %>% mutate(AT = AT1 + AT2 + AT3 + AT4 + AT5)
arg_subtype <- arg_subtype %>% mutate(ARP = ARP1 + ARP2 + ARP3 + ARP4 + ARP5)
arg_subtype <- arg_subtype %>% mutate(ODP = ODP1 + ODP2 + ODP3 + ODP4 + ODP5)
arg_subtype <- arg_subtype %>% select(AT, ARP, ODP)
arg_subtype$AT[!(arg_subtype$AT == 0)]
!(arg_subtype$AT == 0)
tmp <- !(arg_subtype$AT == 0)
# Read ARG_subtype file (Something wrong with read.table, so read by )
arg_subtype <- read.xlsx("../../airborne_arg_uwtp_result/args_oap/ARG/stage_two_output/normalized_cell.subtype.xlsx",
sheet = 1)
# First column to row name
row.names(arg_subtype) <- arg_subtype$subtype
arg_subtype <- arg_subtype[,-1]
# Merge sample to sample type
arg_subtype <- arg_subtype %>% mutate(AT = AT1 + AT2 + AT3 + AT4 + AT5)
arg_subtype <- arg_subtype %>% mutate(ARP = ARP1 + ARP2 + ARP3 + ARP4 + ARP5)
arg_subtype <- arg_subtype %>% mutate(ODP = ODP1 + ODP2 + ODP3 + ODP4 + ODP5)
arg_subtype <- arg_subtype %>% select(AT, ARP, ODP)
arg_subtype  %>% filter(!(AT==0))
arg_subtype  %>% filter(!(AT==0)) = row.names(arg_subtype)
gather_arg_subtype <- gather(arg_subtype, key = "sample", value = "copy_per_cell",
AT:ODP)
View(gather_arg_subtype)
arg_subtype[1,]
for (i in row_number(arg_subtype)) {if (!(arg_subtype[i,] == 0))
{arg_subtype[i,] = row.names(arg_subtype)}}
# Read ARG_subtype file (Something wrong with read.table, so read by )
arg_subtype <- read.xlsx("../../airborne_arg_uwtp_result/args_oap/ARG/stage_two_output/normalized_cell.subtype.xlsx",
sheet = 1)
# First column to row name
row.names(arg_subtype) <- arg_subtype$subtype
arg_subtype <- arg_subtype[,-1]
# Merge sample to sample type
arg_subtype <- arg_subtype %>% mutate(AT = AT1 + AT2 + AT3 + AT4 + AT5)
arg_subtype <- arg_subtype %>% mutate(ARP = ARP1 + ARP2 + ARP3 + ARP4 + ARP5)
arg_subtype <- arg_subtype %>% mutate(ODP = ODP1 + ODP2 + ODP3 + ODP4 + ODP5)
arg_subtype <- arg_subtype %>% select(AT, ARP, ODP)
arg_subtype %>% arrange(AT)
arg_subtype <- arg_subtype %>% arrange(AT)
arg_subtype$AT[!(arg_subtype$AT == 0)] <- row.names(arg_subtype)
# Read ARG_subtype file (Something wrong with read.table, so read by )
arg_subtype <- read.xlsx("../../airborne_arg_uwtp_result/args_oap/ARG/stage_two_output/normalized_cell.subtype.xlsx",
sheet = 1)
# First column to row name
row.names(arg_subtype) <- arg_subtype$subtype
arg_subtype <- arg_subtype[,-1]
# Merge sample to sample type
arg_subtype <- arg_subtype %>% mutate(AT = AT1 + AT2 + AT3 + AT4 + AT5)
arg_subtype <- arg_subtype %>% mutate(ARP = ARP1 + ARP2 + ARP3 + ARP4 + ARP5)
arg_subtype <- arg_subtype %>% mutate(ODP = ODP1 + ODP2 + ODP3 + ODP4 + ODP5)
arg_subtype <- arg_subtype %>% select(AT, ARP, ODP)
arg_subtype <- arg_subtype %>% arrange(desc(AT))
arg_subtype$AT[!(arg_subtype$AT == 0)] <- row.names(arg_subtype)
arg_subtype <- arg_subtype %>% arrange(desc(ARP))
arg_subtype$ARP[!(arg_subtype$ARP == 0)] <- row.names(arg_subtype)
arg_subtype <- arg_subtype %>% arrange(desc(ODP))
arg_subtype$ODP[!(arg_subtype$ODP == 0)] <- row.names(arg_subtype)
arg_subtype[arg_subtype == 0] <- NA
tmp <- as.list(arg_subtype)
tmp <- tmp[!is.na(tmp)]
ggvenn(tmp)
# Read ARG_subtype file (Something wrong with read.table, so read by )
arg_subtype <- read.xlsx("../../airborne_arg_uwtp_result/args_oap/ARG/stage_two_output/normalized_cell.subtype.xlsx",
sheet = 1)
# First column to row name
row.names(arg_subtype) <- arg_subtype$subtype
arg_subtype <- arg_subtype[,-1]
# Merge sample to sample type
arg_subtype <- arg_subtype %>% mutate(AT = AT1 + AT2 + AT3 + AT4 + AT5)
arg_subtype <- arg_subtype %>% mutate(ARP = ARP1 + ARP2 + ARP3 + ARP4 + ARP5)
arg_subtype <- arg_subtype %>% mutate(ODP = ODP1 + ODP2 + ODP3 + ODP4 + ODP5)
arg_subtype <- arg_subtype %>% select(AT, ARP, ODP)
# Replace value to arg
arg_subtype <- arg_subtype %>% arrange(desc(AT))
arg_subtype$AT[!(arg_subtype$AT == 0)] <- row.names(arg_subtype)
arg_subtype <- arg_subtype %>% arrange(desc(ARP))
arg_subtype$ARP[!(arg_subtype$ARP == 0)] <- row.names(arg_subtype)
arg_subtype <- arg_subtype %>% arrange(desc(ODP))
arg_subtype$ODP[!(arg_subtype$ODP == 0)] <- row.names(arg_subtype)
arg_subtype[arg_subtype == 0] <- NA
arg_subtype <- arg_subtype[!is.na(tmp)]
arg_subtype <- as.list(arg_subtype)
ggvenn(arg_subtype)
# Plot
ggvenn(arg_subtype,
fill_color = c("#0073C2FF", "#EFC000FF", "#868686FF"))
# Select fill color
display.brewer.all()
library(RColorBrewer)
# Select fill color
display.brewer.all()
brewer.pal(3, "Set1")
brewer.pal(6, "Set3")
# Plot
ggvenn(arg_subtype,
fill_color = c("#FB8072", "#80B1D3", "#FDB462"))
# Plot
ggvenn(arg_subtype,
fill_color = c("#FB8072", "#80B1D3", "#FDB462"),
stroke_size = 0.5)
# Plot
ggvenn(arg_subtype,
fill_color = c("#FB8072", "#80B1D3", "#FDB462"),
stroke_size = 0.5, set_name_size = 4)
# Plot
ggvenn(arg_subtype,
fill_color = c("#FB8072", "#80B1D3", "#FDB462"),
stroke_size = 0.5, set_name_size = 4)
# Plot
ggvenn(arg_subtype,
fill_color = c("#FB8072", "#80B1D3", "#FDB462"),
stroke_size = 0.5, set_name_size = 4, text_size = 10)
# Plot
ggvenn(arg_subtype,
fill_color = c("#FB8072", "#80B1D3", "#FDB462"),
stroke_size = 0.5, set_name_size = 4, text_size = 4)
# Plot
ggvenn(arg_subtype,
fill_color = c("#FB8072", "#80B1D3", "#FDB462"),
stroke_size = 0.5, stroke_alpha = 0.5,
set_name_size = 4, text_size = 4)
# Plot
ggvenn(arg_subtype,
fill_color = c("#FB8072", "#80B1D3", "#FDB462"),
stroke_size = 0.5, stroke_alpha = 0.1,
set_name_size = 4, text_size = 4)
# Plot
ggvenn(arg_subtype,
fill_color = c("#FB8072", "#80B1D3", "#FDB462"),
stroke_size = 0.5, stroke_alpha = 1,
set_name_size = 4, text_size = 4)
# Plot
ggvenn(arg_subtype,
fill_color = c("#FB8072", "#80B1D3", "#FDB462"),
stroke_size = 0.5, stroke_alpha = 0.5,
set_name_size = 4, text_size = 4)
# Plot
ggvenn(arg_subtype,
fill_color = c("#FB8072", "#80B1D3", "#FDB462"),
fill_alpha = 0.1,
stroke_size = 0.5, stroke_alpha = 0.5,
set_name_size = 4, text_size = 4)
# Plot
ggvenn(arg_subtype,
fill_color = c("#FB8072", "#80B1D3", "#FDB462"),
fill_alpha = 0.5,
stroke_size = 0.5, stroke_alpha = 0.5,
set_name_size = 4, text_size = 4)
# Plot
ggvenn(arg_subtype,
fill_color = c("#FB8072", "#80B1D3", "#FDB462"),
fill_alpha = 0.25,
stroke_size = 0.5, stroke_alpha = 0.5,
set_name_size = 4, text_size = 4)
# Plot
ggvenn(arg_subtype,
fill_color = c("#FB8072", "#80B1D3", "#FDB462"),
fill_alpha = 0.4,
stroke_size = 0.5, stroke_alpha = 0.5,
set_name_size = 4, text_size = 4)
# Plot
ggvenn(arg_subtype,
fill_color = c("#FB8072", "#80B1D3", "#FDB462"),
fill_alpha = 0.4,
stroke_size = 0.5, stroke_alpha = 1,
set_name_size = 4, text_size = 4)
# Plot
ggvenn(arg_subtype,
fill_color = c("#FB8072", "#80B1D3", "#FDB462"),
fill_alpha = 0.4,
stroke_size = 1, stroke_alpha = 1,
set_name_size = 4, text_size = 4)
# Plot
ggvenn(arg_subtype,
fill_color = c("#FB8072", "#80B1D3", "#FDB462"),
fill_alpha = 0.4,
stroke_size = 0.3, stroke_alpha = 1,
set_name_size = 4, text_size = 4)
# Plot
ggvenn(arg_subtype,
fill_color = c("#FB8072", "#80B1D3", "#FDB462"),
fill_alpha = 0.4,
stroke_size = 0.3, stroke_alpha = 5,
set_name_size = 4, text_size = 4)
# Plot
ggvenn(arg_subtype,
fill_color = c("#FB8072", "#80B1D3", "#FDB462"),
fill_alpha = 0.4,
stroke_size = 0.3, stroke_alpha = 1,
set_name_size = 4, text_size = 4)
# Plot
p <- ggvenn(arg_subtype,
fill_color = c("#FB8072", "#80B1D3", "#FDB462"),
fill_alpha = 0.4,
stroke_size = 0.3, stroke_alpha = 1,
set_name_size = 4, text_size = 4)
p + annotate("text",x=3,y=8.5,label="X[1]==X[2]",parse=T,color="blue")
p + annotate("text",x=3,y=8.5,label="X[1]==X[2]",parse=T)
p + annotate("text",x=3,y=8.5,label="X[1]",parse=T)
p + annotate("text",x=3,y=8.5,label=expression(Aeration~tank),parse=T)
p + annotate("text",x=3,y=8.5,label="X[1]",parse=T)
p + annotate("text",x=3,y=8.5,label="Aeration tank",parse=T)
p + annotate("text",x=3,y=8.5,label="Aeration~tank",parse=T)
p + annotate("text",x=3,y=5,label="Aeration~tank",parse=T)
p + annotate("text",x=1,y=5,label="Aeration~tank",parse=T)
p + annotate("text",x=1,y=1,label="Aeration~tank",parse=T)
# Plot
p <- ggvenn(arg_subtype,
fill_color = c("#FB8072", "#80B1D3", "#FDB462"),
fill_alpha = 0.4,
stroke_size = 0.3, stroke_alpha = 1,
set_name_color = "white", set_name_size = 4, text_size = 4)
# Plot
p <- ggvenn(arg_subtype,
fill_color = c("#FB8072", "#80B1D3", "#FDB462"),
fill_alpha = 0.4,
stroke_size = 0.3, stroke_alpha = 1,
set_name_color = "white", set_name_size = 4, text_size = 4)
p + annotate("text",x=1,y=1,label="Aeration~tank",parse=T)
# Plot
p <- ggvenn(arg_subtype,
fill_color = c("#FB8072", "#80B1D3", "#FDB462"),
fill_alpha = 0.4,
stroke_size = 0.3, stroke_alpha = 1,
set_name_color = "white", set_name_size = 0.00001, text_size = 4)
# Plot
p <- ggvenn(arg_subtype,
fill_color = c("#FB8072", "#80B1D3", "#FDB462"),
fill_alpha = 0.4,
stroke_size = 0.3, stroke_alpha = 1,
set_name_color = "black", set_name_size = 0.00001, text_size = 4)
p + annotate("text",x=1,y=1,label="Aeration~tank",parse=T)
# Plot
p <- ggvenn(arg_subtype,
fill_color = c("#FB8072", "#80B1D3", "#FDB462"),
fill_alpha = 0.4,
stroke_size = 0.3, stroke_alpha = 1,
set_name_color = "white", set_name_size = 0.00000001, text_size = 4)
p + annotate("text",x=1,y=1,label="Aeration~tank",parse=T)
p + annotate("text",x=1,y=2,label="Aeration~tank",parse=T)
p + annotate("text",x=1,y=1.5,label="Aeration~tank",parse=T)
p + annotate("text",x=1,y=1.7,label="Aeration~tank",parse=T)
p + annotate("text",x=1,y=1.8,label="Aeration~tank",parse=T)
p + annotate("text",x=0.5,y=1.8,label="Aeration~tank",parse=T)
p + annotate("text",x=0.1,y=1.8,label="Aeration~tank",parse=T)
p + annotate("text",x=-1,y=1.8,label="Aeration~tank",parse=T)
p + annotate("text",x=-0.5,y=1.8,label="Aeration~tank",parse=T)
p + annotate("text",x=-0.7,y=1.8,label="Aeration~tank",parse=T)
p <- p + annotate("text",x=-0.7,y=1.8,label="Aeration~tank",parse=T)
ggsave("ARG_venn.png", p, path = "../../Figure/ARG",
width = 14, height = 3.2, units = "in") # save to png format
ggsave("ARG_venn.png", p, path = "../../airborne_arg_uwtp_result/Figure/ARG",
width = 14, height = 3.2, units = "in") # save to png format
p + annotate("text",x=-0.7,y=1.8,label="Aeration~tank",parse=T)
p <- p + annotate("text",x=0.7,y=1.8,label="Aeration~tank~PM[2.5]",parse=T)
# Plot
p <- ggvenn(arg_subtype,
fill_color = c("#FB8072", "#80B1D3", "#FDB462"),
fill_alpha = 0.4,
stroke_size = 0.3, stroke_alpha = 1,
set_name_color = "white", set_name_size = 0.00000001, text_size = 4)
p <- p + annotate("text",x=-0.7,y=1.8,label="Aeration~tank",parse=T)
p + annotate("text",x=0.7,y=1.8,label="Aeration~tank~PM[2.5]",parse=T)
p + annotate("text",x=0.8,y=1.8,label="Aeration~tank~PM[2.5]",parse=T)
p <- p + annotate("text",x=0.8,y=1.8,label="Aeration~tank~PM[2.5]",parse=T)
p + annotate("text",x=0.8,y=0,label="Outdoor~PM[2.5]",parse=T)
p + annotate("text",x=0.8,y=0-1label="Outdoor~PM[2.5]",parse=T)
p + annotate("text",x=0.8,y=-1label="Outdoor~PM[2.5]",parse=T)
p + annotate("text",x=0.8,y=-1,label="Outdoor~PM[2.5]",parse=T)
p + annotate("text",x=0.8,y=-1.5,label="Outdoor~PM[2.5]",parse=T)
p + annotate("text",x=0.8,y=-1.7,label="Outdoor~PM[2.5]",parse=T)
p + annotate("text",x=0.8,y=-1.8,label="Outdoor~PM[2.5]",parse=T)
p + annotate("text",x=0,y=-1.8,label="Outdoor~PM[2.5]",parse=T)
p <- p + annotate("text",x=0.7,y=1.8,label="Aeration~tank~PM[2.5]",parse=T)
# Plot
p <- ggvenn(arg_subtype,
fill_color = c("#FB8072", "#80B1D3", "#FDB462"),
fill_alpha = 0.4,
stroke_size = 0.3, stroke_alpha = 1,
set_name_color = "white", set_name_size = 0.00000001, text_size = 4)
p <- p + annotate("text",x=-0.7,y=1.8,label="Aeration~tank",parse=T)
p <- p + annotate("text",x=0.7,y=1.8,label="Aeration~tank~PM[2.5]",parse=T)
p + annotate("text",x=0,y=-1.8,label="Outdoor~PM[2.5]",parse=T)
# Plot
p <- ggvenn(arg_subtype,
fill_color = c("#FB8072", "#80B1D3", "#FDB462"),
fill_alpha = 0.4,
stroke_size = 0.3, stroke_alpha = 1,
set_name_color = "white", set_name_size = 0.00000001, text_size = 4)
p <- p + annotate("text",x=-0.7,y=1.8,label="Aeration~tank",parse=T)
p <- p + annotate("text",x=0.75,y=1.8,label="Aeration~tank~PM[2.5]",parse=T)
p + annotate("text",x=0,y=-1.8,label="Outdoor~PM[2.5]",parse=T)
p <- p + annotate("text",x=0,y=-1.8,label="Outdoor~PM[2.5]",parse=T)
ggsave("ARG_venn.png", p, path = "../../airborne_arg_uwtp_result/Figure/ARG",
width = 14, height = 3.2, units = "in") # save to png format
# Plot
p <- ggvenn(arg_subtype,
fill_color = c("#FB8072", "#80B1D3", "#FDB462"),
fill_alpha = 0.4,
stroke_size = 0.3, stroke_alpha = 1,
set_name_color = "white", set_name_size = 0.00000001, text_size = 4)
p + annotate("text",x=-0.7,y=1.8,label="Aeration~tank",parse=T,size = 10)
p + annotate("text",x=-0.7,y=1.8,label="Aeration~tank",parse=T,size = 5)
# Plot
p <- ggvenn(arg_subtype,
fill_color = c("#FB8072", "#80B1D3", "#FDB462"),
fill_alpha = 0.4,
stroke_size = 0.3, stroke_alpha = 1,
set_name_color = "white", set_name_size = 0.00000001, text_size = 4)
p + annotate("text",x=-0.7,y=1.8,label="Aeration~tank",parse=T,size = 5)
p <- p + annotate("text",x=0.75,y=1.8,label="Aeration~tank~PM[2.5]",parse=T)
p <- p + annotate("text",x=0,y=-1.8,label="Outdoor~PM[2.5]",parse=T)
p
p <- p + annotate("text",x=-0.7,y=1.8,label="Aeration~tank",parse=T,size = 5)
p
p <- p + annotate("text",x=-0.7,y=1.8,label="Aeration~tank",parse=T,size = 4)
p
# Plot
p <- ggvenn(arg_subtype,
fill_color = c("#FB8072", "#80B1D3", "#FDB462"),
fill_alpha = 0.4,
stroke_size = 0.3, stroke_alpha = 1,
set_name_color = "white", set_name_size = 0.00000001, text_size = 4)
p <- p + annotate("text",x=-0.7,y=1.8,label="Aeration~tank",parse=T,size = 4)
p <- p + annotate("text",x=0.75,y=1.8,label="Aeration~tank~PM[2.5]",parse=T)
p <- p + annotate("text",x=0,y=-1.8,label="Outdoor~PM[2.5]",parse=T)
p
# Plot
p <- ggvenn(arg_subtype,
fill_color = c("#FB8072", "#80B1D3", "#FDB462"),
fill_alpha = 0.4,
stroke_size = 0.3, stroke_alpha = 1,
set_name_color = "white", set_name_size = 0.00000001, text_size = 4)
p <- p + annotate("text",x=-0.7,y=1.8,label="Aeration~tank",parse=T,size = 5)
# Plot
p <- ggvenn(arg_subtype,
fill_color = c("#FB8072", "#80B1D3", "#FDB462"),
fill_alpha = 0.4,
stroke_size = 0.3, stroke_alpha = 1,
set_name_color = "white", set_name_size = 0.00000001, text_size = 4)
p <- p + annotate("text",x=-0.7,y=1.8,label="Aeration~tank",parse=T,size = 5)
p <- p + annotate("text",x=0.75,y=1.8,label="Aeration~tank~PM[2.5]",parse=T,size = 5)
p <- p + annotate("text",x=0,y=-1.8,label="Outdoor~PM[2.5]",parse=T,size = 5)
p
# Plot
p <- ggvenn(arg_subtype,
fill_color = c("#FB8072", "#80B1D3", "#FDB462"),
fill_alpha = 0.4,
stroke_size = 0.3, stroke_alpha = 1,
set_name_color = "white", set_name_size = 0.00000001, text_size = 4)
p <- p + annotate("text",x=-0.7,y=1.8,label="Aeration~tank",parse=T,size = 5)
p <- p + annotate("text",x=0.75,y=1.8,label="Aeration~tank~PM[2.5]",parse=T)
p <- p + annotate("text",x=0,y=-1.8,label="Outdoor~PM[2.5]",parse=T)
p
# Plot
p <- ggvenn(arg_subtype,
fill_color = c("#FB8072", "#80B1D3", "#FDB462"),
fill_alpha = 0.4,
stroke_size = 0.3, stroke_alpha = 1,
set_name_color = "white", set_name_size = 0.00000001, text_size = 4)
p <- p + annotate("text",x=-0.7,y=1.8,label="Aeration~tank",parse=T)
p <- p + annotate("text",x=0.75,y=1.8,label="Aeration~tank~PM[2.5]",parse=T)
p <- p + annotate("text",x=0,y=-1.8,label="Outdoor~PM[2.5]",parse=T)
p
print(p)
ggsave("ARG_venn.png", p, path = "../../airborne_arg_uwtp_result/Figure/ARG",
width = 14, height = 3.2, units = "in") # save to png format
# Plot
p <- ggvenn(arg_subtype,
fill_color = c("#FB8072", "#80B1D3", "#FDB462"),
fill_alpha = 0.4,
stroke_size = 0.3, stroke_alpha = 1,
set_name_color = "white", set_name_size = 0.00000001, text_size = 4)
p <- p + annotate("text",x=-0.7,y=1.8,label="Aeration~tank",parse=T)
p <- p + annotate("text",x=0.75,y=1.75,label="Aeration~tank~PM[2.5]",parse=T)
p <- p + annotate("text",x=0,y=-1.8,label="Outdoor~PM[2.5]",parse=T)
print(p)
# Plot
p <- ggvenn(arg_subtype,
fill_color = c("#FB8072", "#80B1D3", "#FDB462"),
fill_alpha = 0.4,
stroke_size = 0.3, stroke_alpha = 1,
set_name_color = "white", set_name_size = 0.00000001, text_size = 4)
p <- p + annotate("text",x=-0.7,y=1.8,label="Aeration~tank",parse=T)
p <- p + annotate("text",x=0.75,y=1.79,label="Aeration~tank~PM[2.5]",parse=T)
p <- p + annotate("text",x=0,y=-1.8,label="Outdoor~PM[2.5]",parse=T)
print(p)
ggsave("ARG_venn.png", p, path = "../../airborne_arg_uwtp_result/Figure/ARG",
width = 14, height = 3.2, units = "in") # save to png format
# Plot
p <- ggvenn(arg_subtype,
fill_color = c("#FB8072", "#80B1D3", "#FDB462"),
fill_alpha = 0.4,
stroke_size = 0.3, stroke_alpha = 1,
set_name_color = "white", set_name_size = 0.00000001, text_size = 4)
p <- p + annotate("text",x=-0.7,y=1.8,label="Aeration~tank",parse=T)
p <- p + annotate("text",x=0.75,y=1.785,label="Aeration~tank~PM[2.5]",parse=T)
p <- p + annotate("text",x=0,y=-1.8,label="Outdoor~PM[2.5]",parse=T)
print(p)
ggsave("ARG_venn.png", p, path = "../../airborne_arg_uwtp_result/Figure/ARG",
width = 14, height = 3.2, units = "in") # save to png format
# Plot
p <- ggvenn(arg_subtype,
fill_color = c("#FB8072", "#80B1D3", "#FDB462"),
fill_alpha = 0.5,
stroke_size = 0.3, stroke_alpha = 1,
set_name_color = "white", set_name_size = 0.00000001, text_size = 4)
p <- p + annotate("text",x=-0.7,y=1.8,label="Aeration~tank",parse=T)
p <- p + annotate("text",x=0.75,y=1.785,label="Aeration~tank~PM[2.5]",parse=T)
p <- p + annotate("text",x=0,y=-1.8,label="Outdoor~PM[2.5]",parse=T)
print(p)
ggsave("ARG_venn.png", p, path = "../../airborne_arg_uwtp_result/Figure/ARG",
width = 14, height = 3.2, units = "in") # save to png format
# Plot
p <- ggvenn(arg_subtype,
fill_color = c("#FB8072", "#80B1D3", "#FDB462"),
fill_alpha = 0.45,
stroke_size = 0.3, stroke_alpha = 1,
set_name_color = "white", set_name_size = 0.00000001, text_size = 4)
p <- p + annotate("text",x=-0.7,y=1.8,label="Aeration~tank",parse=T)
p <- p + annotate("text",x=0.75,y=1.785,label="Aeration~tank~PM[2.5]",parse=T)
p <- p + annotate("text",x=0,y=-1.8,label="Outdoor~PM[2.5]",parse=T)
print(p)
ggsave("ARG_venn.png", p, path = "../../airborne_arg_uwtp_result/Figure/ARG",
width = 14, height = 3.2, units = "in") # save to png format
ggsave("ARG_venn.png", p, path = "../../airborne_arg_uwtp_result/Figure/ARG",
width = 7, height = 3.2, units = "in") # save to png format
ggsave("ARG_venn.png", p, path = "../../airborne_arg_uwtp_result/Figure/ARG",
width = 5, height = 3.2, units = "in") # save to png format
ggsave("ARG_venn.png", p, path = "../../airborne_arg_uwtp_result/Figure/ARG",
width = 4, height = 3.2, units = "in") # save to png format
ggsave("ARG_venn.png", p, path = "../../airborne_arg_uwtp_result/Figure/ARG",
width = 3.5, height = 3.2, units = "in") # save to png format
source("~/Documents/NTU_research/airborne_arg_uwtp/ARG/ARG_mechisam.R", echo=TRUE)
# Import library
library(tidyverse)
library(stringr)
library(tibble)
source("~/Documents/NTU_research/airborne_arg_uwtp/ARG/ARG_subtype_cell_abundance.R", echo=TRUE)
source("~/Documents/NTU_research/airborne_arg_uwtp/ARG/ARG_subtype_compare.R", echo=TRUE)
source("~/Documents/NTU_research/airborne_arg_uwtp/ARG/ARG_type_16S_abundance.R", echo=TRUE)
source("~/Documents/NTU_research/airborne_arg_uwtp/ARG/ARG_type_cell_abundance.R", echo=TRUE)
source("~/Documents/NTU_research/airborne_arg_uwtp/ARG/ARG_type_ppm_abundance.R", echo=TRUE)
source("~/Documents/NTU_research/airborne_arg_uwtp/ARG/ARG_type_rpkm_abundance.R", echo=TRUE)
source("~/Documents/NTU_research/airborne_arg_uwtp/ARG/ARG_type_tpm_abundance.R", echo=TRUE)
