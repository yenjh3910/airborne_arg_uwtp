row.names(top_subtype) <- gsub("Bifidobacteria intrinsic ileS conferring resistance to mupirocin",
"Bifidobacteria intrinsic ileS",
row.names(top_subtype)) # Adjust subtype name
# Usage pheatmap
top_subtype <- as.matrix(top_subtype) # Convert table to matrix
log_top_subtype <- log10(top_subtype) # log10 conversion
log_top_subtype[log_top_subtype == -Inf] <- NA
## Create annotation label (Note annotation_row was already created as type_subtype)
annotation_row = data.frame(Sample = factor(rep(c("ARP", "AT", "ODP"),
c(5, 5, 5))))
rownames(annotation_row) = colnames(log_top_subtype)
annotation_col <- type_subtype
annotation_col$ARG <- str_to_sentence(annotation_col$ARG) # Covert first letter to uppercase
annotation_col$ARG <- gsub("Macrolide-lincosamide-streptogramin", "MLS", annotation_col$ARG)
row.names(annotation_col) <- gsub("Bifidobacteria intrinsic ileS conferring resistance to mupirocin",
"Bifidobacteria intrinsic ileS", row.names(annotation_col))
# Select color
display.brewer.all()
brewer.pal(3, "Set1") # However, I did not select these color finally
library("ggsci")
ann_colors = list(Sample = c(AT = "#FC4E07", ARP = "#00AFBB", ODP = "#E7B800"))
## Plot
phtmap <- pheatmap(t(log_top_subtype),
annotation_row = annotation_row, annotation_col = annotation_col,
cluster_cols = FALSE, clustering_distance_rows = "euclidean")
### Rotate the cluster
library(seriation)
library(dendextend)
row_dend <- phtmap[[1]]
row_dend <- dendextend::rotate(row_dend, order = c("ODP5","ODP1","ODP3","ODP2","ODP4",
"ARP4","ARP2","ARP3","ARP1","ARP5",
"AT2","AT5","AT1","AT3","AT4") )
p <- pheatmap(t(log_top_subtype),
annotation_row = annotation_row, annotation_col = annotation_col,
cluster_cols = FALSE, annotation_colors = ann_colors,
clustering_distance_rows = "euclidean",
fontsize = 12, fontsize_row = 12, fontsize_col = 10,
cellwidth = 12, cellheight = 17, bg = "transparent",
cluster_rows=as.hclust(row_dend))
print(p)
# Change to v2 color heatmap
display.brewer.all()
brewer.pal(3, "Pastel2")
ann_colors = list(Sample = c(AT="#fab0ab", ARP="#76d9dd", ODP="#b2cf82"),
ARG=c('Multidrug'="#8DD3C7",
'Sulfonamide'="#FFFFB3",
'MLS'="#BEBADA",
'Aminoglycoside'="#FB8072",
'Tetracycline'="#80B1D3",
'Rifamycin'="#FDB462",
'Beta lactam'="#B3DE69",
'Bacitracin'="#FCCDE5",
'Polymyxin'="#FFED6F",
'Chloramphenicol'="#BC80BD",
'Quinolone'="#E5C494",
'Florfenicol'="#FB9A99",
'Mupirocin'="#A6CEE3",
'Novobiocin'="#FDCDAC",
'Pleuromutilin tiamulin'="#CCEBC5"
))
p<-pheatmap(t(log_top_subtype),
annotation_row = annotation_row, annotation_col = annotation_col,
cluster_cols = FALSE, annotation_colors = ann_colors,
clustering_distance_rows = "euclidean",
fontsize = 12, fontsize_row = 12, fontsize_col = 10,
cellwidth = 12, cellheight = 17, bg = "transparent",
cluster_rows=as.hclust(row_dend))
print(p)
ggsave("ARG_subtype_cell_v2color.png", p,
path = "../../airborne_arg_uwtp_result/Figure/ARG",
width = 17, height = 8,
units = "in", bg='transparent') # save to png format
library(tidyverse)
theme_set(theme_test())
library(ape)
library(ade4)
pcoa.data <- iris %>% mutate(Sepal.Length = scale(Sepal.Length),
Sepal.Width = scale(Sepal.Width),
Petal.Length = scale(Petal.Length),
Petal.Width = scale(Petal.Width))
View(pcoa.data)
tab.dist <- dist(pcoa.data[,-5])
pcoa <- pcoa(tab.dist)
pcoa_eig <- pcoa$values
sample_site <- pcoa$vectors%>%as.data.frame()
names(sample_site)[1:2] <- c("x","y")
sample_site <- data.frame(sample_site,iris$Species)
sample_site%>%ggplot()+
geom_point(aes(x,y,color=iris.Species),size = 1.5)+
geom_vline(xintercept = 0, color = 'gray', size = 0.4) +
geom_hline(yintercept = 0, color = 'gray', size = 0.4) +
stat_ellipse(aes(x,y,color = iris.Species,fill = iris.Species),
geom ="polygon",level = 0.95,size = 0.5,alpha = 0.2)+
labs(x = paste('PCoA1: ', round(100 * pcoa_eig[1,2], 2), '%'),
y = paste('PCoA2: ', round(100 * pcoa_eig[2,2], 2), '%'))
# Import library
library(tidyverse)
library(stringr)
library(tibble)
library(openxlsx)
library(pheatmap)
library(RColorBrewer)
library(scales)
# Read ARG_subtype file (Something wrong with read.table, so read by )
arg_subtype <- read.xlsx("../../airborne_arg_uwtp_result/args_oap/ARG/stage_two_output/normalized_cell.subtype.xlsx",
sheet = 1)
View(arg_subtype)
# Preview raw data
gather_arg_subtype <- gather(arg_subtype, key = "sample", value = "copy_per_cell",
ARP1:ODP5) # Transform to gather format
gather_arg_subtype_order <- gather_arg_subtype[order(gather_arg_subtype$copy_per_cell,
decreasing = T),] # Order by abundance
View(gather_arg_subtype_order)
# Read ARG_subtype file (Something wrong with read.table, so read by )
arg_subtype <- read.xlsx("../../airborne_arg_uwtp_result/args_oap/ARG/stage_two_output/normalized_cell.subtype.xlsx",
sheet = 1)
arg_subtype <- read.xlsx("../../airborne_arg_uwtp_result/args_oap/ARG/stage_two_output/normalized_cell.subtype.xlsx",
sheet = 1)
library(tidyverse)
theme_set(theme_test())
library(ape)
library(ade4)
arg_subtype <- read.xlsx("../../airborne_arg_uwtp_result/args_oap/ARG/stage_two_output/normalized_cell.subtype.xlsx",
sheet = 1)
View(arg_subtype)
pcoa.data <- iris %>% mutate(Sepal.Length = scale(Sepal.Length),
Sepal.Width = scale(Sepal.Width),
Petal.Length = scale(Petal.Length),
Petal.Width = scale(Petal.Width))
View(pcoa.data)
tmp <- t(arg_subtype)
View(tmp)
tmp <- as.data.frame(t(arg_subtype))
View(tmp)
col.names(tmp) <- tmp[1,]
colnames(tmp) <- tmp[1,]
tmp <- tmp[-1,]
pcoa.data <- iris %>% mutate(Sepal.Length = scale(Sepal.Length),
Sepal.Width = scale(Sepal.Width),
Petal.Length = scale(Petal.Length),
Petal.Width = scale(Petal.Width))
tab.dist <- dist(pcoa.data[,-5])
View(pcoa.data)
View(pcoa.data)
tmp %>% mutate(row.names(tmp))
tmp <- tmp %>% mutate(row.names(tmp))
tmp[,988]
tmp[,987]
arg_subtype <- read.xlsx("../../airborne_arg_uwtp_result/args_oap/ARG/stage_two_output/normalized_cell.subtype.xlsx",
sheet = 1)
tmp <- as.data.frame(t(arg_subtype))
colnames(tmp) <- tmp[1,]
tmp <- tmp[-1,]
tmp <- tmp %>% mutate(sample_type = row.names(tmp))
tmp[,987]
arg_subtype <- read.xlsx("../../airborne_arg_uwtp_result/args_oap/ARG/stage_two_output/normalized_cell.subtype.xlsx",
sheet = 1)
tmp <- as.data.frame(t(arg_subtype))
colnames(tmp) <- tmp[1,]
tmp <- tmp[-1,]
tmp <- tmp %>% mutate(sample_type = row.names(tmp))
View(tmp)
source("~/.active-rstudio-document", echo=TRUE)
arg_subtype <- read.xlsx("../../airborne_arg_uwtp_result/args_oap/ARG/stage_two_output/normalized_cell.subtype.xlsx",
sheet = 1)
tmp <- as.data.frame(t(arg_subtype))
colnames(tmp) <- tmp[1,]
tmp <- tmp[-1,]
tmp <- tmp %>% mutate(sample_type = row.names(tmp)) %>% relocate(sample_type)
row.names(tmp) <- 1:length(tmp)
length(tmp)
length(tmp[,1])
1:length(tmp[,1])
row.names(tmp) <- 1:length(tmp[,1])
# Import
arg_subtype <- read.xlsx("../../airborne_arg_uwtp_result/args_oap/ARG/stage_two_output/normalized_cell.subtype.xlsx",
sheet = 1)
# Adujust dataframe
arg_subtype <- as.data.frame(t(arg_subtype))
colnames(arg_subtype) <- arg_subtype[1,]
arg_subtype <- arg_subtype[-1,]
arg_subtype <- arg_subtype %>% mutate(sample_type = row.names(arg_subtype)) %>%
relocate(sample_type)
row.names(arg_subtype) <- 1:length(arg_subtype[,1])
View(arg_subtype)
pcoa.data <- iris %>% mutate(Sepal.Length = scale(Sepal.Length),
Sepal.Width = scale(Sepal.Width),
Petal.Length = scale(Petal.Length),
Petal.Width = scale(Petal.Width))
View(pcoa.data)
tab.dist <- dist(arg_subtype[,-1])
tab.dist <- dist(pcoa.data[,-1]
tab.dist <- dist(pcoa.data[,-1])
pcoa <- pcoa(tab.dist)
tab.dist <- dist(arg_subtype[,-1])
pcoa <- pcoa(tab.dist)
View(pcoa)
View(pcoa)
pcoa_eig <- pcoa$values
View(pcoa_eig)
sample_site <- pcoa$vectors%>%as.data.frame()
View(sample_site)
names(sample_site)[1:2] <- c("x","y")
sample_site <- data.frame(sample_site,iris$Species)
iris$Species
# Import
arg_subtype <- read.xlsx("../../airborne_arg_uwtp_result/args_oap/ARG/stage_two_output/normalized_cell.subtype.xlsx",
sheet = 1)
# Adjust dataframe
subtype_data <- as.data.frame(t(arg_subtype))
colnames(subtype_data) <- arg_subtype[1,]
# Import
arg_subtype <- read.xlsx("../../airborne_arg_uwtp_result/args_oap/ARG/stage_two_output/normalized_cell.subtype.xlsx",
sheet = 1)
# Adjust dataframe
subtype_data <- as.data.frame(t(arg_subtype))
colnames(subtype_data) <- subtype_data[1,]
subtype_data <- subtype_data[-1,]
subtype_data<- subtype_data %>% mutate(sample_type = row.names(subtype_data)) %>%
relocate(sample_type)
View(subtype_data)
row.names(subtype_data) <- 1:length(subtype_data[,1])
tab.dist <- dist(subtype_data[,-1])
pcoa <- pcoa(tab.dist)
pcoa_eig <- pcoa$values
sample_site <- pcoa$vectors%>%as.data.frame()
names(sample_site)[1:2] <- c("x","y")
View(subtype_data)
sample_site <- data.frame(sample_site,subtype_data$sample_type)
View(sample_site)
library(tidyverse)
theme_set(theme_test())
library(ape)
library(ade4)
# Import
arg_subtype <- read.xlsx("../../airborne_arg_uwtp_result/args_oap/ARG/stage_two_output/normalized_cell.subtype.xlsx",
sheet = 1)
# Adjust dataframe
subtype_data <- as.data.frame(t(arg_subtype))
colnames(subtype_data) <- subtype_data[1,]
subtype_data <- subtype_data[-1,]
subtype_data<- subtype_data %>% mutate(sample_type = row.names(subtype_data)) %>%
relocate(sample_type)
row.names(subtype_data) <- 1:length(subtype_data[,1])
View(subtype_data)
# Import
arg_subtype <- read.xlsx("../../airborne_arg_uwtp_result/args_oap/ARG/stage_two_output/normalized_cell.subtype.xlsx",
sheet = 1)
# Adjust dataframe
subtype_data <- as.data.frame(t(arg_subtype))
colnames(subtype_data) <- subtype_data[1,]
subtype_data <- subtype_data[-1,]
subtype_data<- subtype_data %>% mutate(sample = row.names(subtype_data)) %>%
relocate(sample)
row.names(subtype_data) <- 1:length(subtype_data[,1])
# Import
arg_subtype <- read.xlsx("../../airborne_arg_uwtp_result/args_oap/ARG/stage_two_output/normalized_cell.subtype.xlsx",
sheet = 1)
# Adjust dataframe
subtype_data <- as.data.frame(t(arg_subtype))
colnames(subtype_data) <- subtype_data[1,]
subtype_data <- subtype_data[-1,]
subtype_data<- subtype_data %>% mutate(sample_type = row.names(subtype_data)) %>%
relocate(sample_type)
row.names(subtype_data) <- 1:length(subtype_data[,1])
subtype_data$sample_type <- gsub("1|2|3|4|5","",subtype_data$sample_type)
tab.dist <- dist(subtype_data[,-1])
pcoa <- pcoa(tab.dist)
pcoa_eig <- pcoa$values
sample_site <- pcoa$vectors%>%as.data.frame()
View(sample_site)
names(sample_site)[1:2] <- c("x","y")
sample_site <- data.frame(sample_site,subtype_data$sample_type)
View(sample_site)
sample_site%>%ggplot()+
geom_point(aes(x,y,color=iris.Species),size = 1.5)+
geom_vline(xintercept = 0, color = 'gray', size = 0.4) +
geom_hline(yintercept = 0, color = 'gray', size = 0.4) +
stat_ellipse(aes(x,y,color = iris.Species,fill = iris.Species),
geom ="polygon",level = 0.95,size = 0.5,alpha = 0.2)+
labs(x = paste('PCoA1: ', round(100 * pcoa_eig[1,2], 2), '%'),
y = paste('PCoA2: ', round(100 * pcoa_eig[2,2], 2), '%'))
sample_site%>%ggplot()+
geom_point(aes(x,y),size = 1.5)+
geom_vline(xintercept = 0, color = 'gray', size = 0.4) +
geom_hline(yintercept = 0, color = 'gray', size = 0.4) +
stat_ellipse(aes(x,y,color = iris.Species,fill = iris.Species),
geom ="polygon",level = 0.95,size = 0.5,alpha = 0.2)+
labs(x = paste('PCoA1: ', round(100 * pcoa_eig[1,2], 2), '%'),
y = paste('PCoA2: ', round(100 * pcoa_eig[2,2], 2), '%'))
library(tidyverse)
theme_set(theme_test())
library(ape)
library(ade4)
# Import
arg_subtype <- read.xlsx("../../airborne_arg_uwtp_result/args_oap/ARG/stage_two_output/normalized_cell.subtype.xlsx",
sheet = 1)
# Adjust dataframe
subtype_data <- as.data.frame(t(arg_subtype))
colnames(subtype_data) <- subtype_data[1,]
subtype_data <- subtype_data[-1,]
subtype_data<- subtype_data %>% mutate(sample_type = row.names(subtype_data)) %>%
relocate(sample_type)
row.names(subtype_data) <- 1:length(subtype_data[,1])
subtype_data$sample_type <- gsub("1|2|3|4|5","",subtype_data$sample_type)
pcoa.data <- iris %>% mutate(Sepal.Length = scale(Sepal.Length),
Sepal.Width = scale(Sepal.Width),
Petal.Length = scale(Petal.Length),
Petal.Width = scale(Petal.Width))
tab.dist <- dist(subtype_data[,-1])
pcoa <- pcoa(tab.dist)
pcoa_eig <- pcoa$values
sample_site <- pcoa$vectors%>%as.data.frame()
names(sample_site)[1:2] <- c("x","y")
sample_site <- data.frame(sample_site,subtype_data$sample_type)
sample_site <- data.frame(sample_site,subtype_data$sample_type)
iris.Species
library(tidyverse)
theme_set(theme_test())
library(ape)
library(ade4)
iris.Species
# Import
arg_subtype <- read.xlsx("../../airborne_arg_uwtp_result/args_oap/ARG/stage_two_output/normalized_cell.subtype.xlsx",
sheet = 1)
# Adjust dataframe
subtype_data <- as.data.frame(t(arg_subtype))
colnames(subtype_data) <- subtype_data[1,]
subtype_data <- subtype_data[-1,]
subtype_data<- subtype_data %>% mutate(sample_type = row.names(subtype_data)) %>%
relocate(sample_type)
row.names(subtype_data) <- 1:length(subtype_data[,1])
subtype_data$sample_type <- gsub("1|2|3|4|5","",subtype_data$sample_type)
pcoa.data <- iris %>% mutate(Sepal.Length = scale(Sepal.Length),
Sepal.Width = scale(Sepal.Width),
Petal.Length = scale(Petal.Length),
Petal.Width = scale(Petal.Width))
tab.dist <- dist(subtype_data[,-1])
pcoa <- pcoa(tab.dist)
pcoa_eig <- pcoa$values
iris.Species
sample_site <- pcoa$vectors%>%as.data.frame()
names(sample_site)[1:2] <- c("x","y")
sample_site <- data.frame(sample_site,subtype_data$sample_type)
sample_site%>%ggplot()+
geom_point(aes(x,y,color=iris.Species),size = 1.5)+
geom_vline(xintercept = 0, color = 'gray', size = 0.4) +
geom_hline(yintercept = 0, color = 'gray', size = 0.4) +
stat_ellipse(aes(x,y,color = iris.Species,fill = iris.Species),
geom ="polygon",level = 0.95,size = 0.5,alpha = 0.2)+
labs(x = paste('PCoA1: ', round(100 * pcoa_eig[1,2], 2), '%'),
y = paste('PCoA2: ', round(100 * pcoa_eig[2,2], 2), '%'))
sample_site%>%ggplot()+
geom_point(aes(x,y),size = 1.5)+
geom_vline(xintercept = 0, color = 'gray', size = 0.4) +
geom_hline(yintercept = 0, color = 'gray', size = 0.4)
sample_site%>%ggplot()+
geom_point(aes(x,y,color=subtype_data.sample_type),size = 1.5)+
geom_vline(xintercept = 0, color = 'gray', size = 0.4) +
geom_hline(yintercept = 0, color = 'gray', size = 0.4)
sample_site%>%ggplot()+
geom_point(aes(x,y,color=subtype_data.sample_type),size = 1.5)+
geom_vline(xintercept = 0, color = 'gray', size = 0.4) +
geom_hline(yintercept = 0, color = 'gray', size = 0.4) +
stat_ellipse(aes(x,y,color = subtype_data.sample_type,fill = subtype_data.sample_type),
geom ="polygon",level = 0.95,size = 0.5,alpha = 0.2)+
labs(x = paste('PCoA1: ', round(100 * pcoa_eig[1,2], 2), '%'),
y = paste('PCoA2: ', round(100 * pcoa_eig[2,2], 2), '%'))
## Import ARG subtype dataset
library(tidyverse)
library(openxlsx)
arg_subtype <- read.xlsx("../../airborne_arg_uwtp_result/args_oap/ARG/stage_two_output/normalized_cell.subtype.xlsx",
sheet = 1)
View(arg_subtype)
t <- read.table("../../airborne_arg_uwtp_result/download_fq/normalized_cell.subtype.txt",
sheet = 1)
t <- read_table("../../airborne_arg_uwtp_result/download_fq/normalized_cell.subtype.txt")
View(t)
t <- read_table("../../airborne_arg_uwtp_result/download_fq/normalized_cell.subtype.txt",
header = TRUE, sep = "")
t <- read_table("../../airborne_arg_uwtp_result/download_fq/normalized_cell.subtype.txt",
header = TRUE, sep = "")
t <- read.table("../../airborne_arg_uwtp_result/download_fq/normalized_cell.subtype.txt",
header = TRUE, sep = "")
t <- read.table("../../airborne_arg_uwtp_result/download_fq/normalized_cell.subtype.txt",
header = TRUE, sep = "/t")
t <- read.table("../../airborne_arg_uwtp_result/download_fq/normalized_cell.subtype.txt",
header = TRUE, sep = "\t")
t <- read.table("../../airborne_arg_uwtp_result/download_fq/normalized_cell.subtype.txt",
header = TRUE, sep = " ")
View(t)
t <- read.table("../../airborne_arg_uwtp_result/download_fq/normalized_cell.subtype.txt",
header = TRUE, sep = "\t")
t <- read.table("../../airborne_arg_uwtp_result/download_fq/normalized_cell.subtype.txt",
header = TRUE, sep = "\t", quote = "")
View(t)
download_fq <- read.table("../../airborne_arg_uwtp_result/download_fq/normalized_cell.subtype.txt",
header = TRUE, sep = "\t", quote = "")
View(arg_subtype)
full_join(arg_subtype, download_fq)
arg_subtype <- full_join(arg_subtype, download_fq)
is.na(arg_subtype) <- 0
arg_subtype[is.na(arg_subtype)] <- 0
row.names(arg_subtype) <- arg_subtype[,1]
arg_subtype <- arg_subtype[,-1]
## Transform dataframe
arg_subtype <-as.data.frame(t(arg_subtype))
## Normalization
arg_subtype <- decostand(arg_subtype, method = 'hellinger')
arg_bray<-vegdist(arg_subtype, method="bray")
library(ape)
df.pcoa<-pcoa(arg_bray,correction = "cailliez")
## Import ARG subtype dataset
library(tidyverse)
library(openxlsx)
arg_subtype <- read.xlsx("../../airborne_arg_uwtp_result/args_oap/ARG/stage_two_output/normalized_cell.subtype.xlsx",
sheet = 1)
download_fq <- read.table("../../airborne_arg_uwtp_result/download_fq/normalized_cell.subtype.txt",
header = TRUE, sep = "\t", quote = "")
arg_subtype <- full_join(arg_subtype, download_fq)
arg_subtype[is.na(arg_subtype)] <- 0
row.names(arg_subtype) <- arg_subtype[,1]
arg_subtype <- arg_subtype[,-1]
## Transform dataframe
arg_subtype <-as.data.frame(t(arg_subtype))
## Normalization
arg_subtype <- decostand(arg_subtype, method = 'hellinger')
library(vegan)
## Normalization
arg_subtype <- decostand(arg_subtype, method = 'hellinger')
arg_bray<-vegdist(arg_subtype, method="bray")
library(ape)
df.pcoa<-pcoa(arg_bray,correction = "cailliez")
df.plot<-data.frame(df.pcoa$vectors)
head(df.plot)
df.plot$sample_type <- gsub("1|2|3|4|5","",row.names(df.plot))
View(df.plot)
## Import ARG subtype dataset
library(tidyverse)
library(openxlsx)
library(vegan)
arg_subtype <- read.xlsx("../../airborne_arg_uwtp_result/args_oap/ARG/stage_two_output/normalized_cell.subtype.xlsx",
sheet = 1)
download_fq <- read.table("../../airborne_arg_uwtp_result/download_fq/normalized_cell.subtype.txt",
header = TRUE, sep = "\t", quote = "")
arg_subtype <- full_join(arg_subtype, download_fq)
arg_subtype[is.na(arg_subtype)] <- 0
row.names(arg_subtype) <- arg_subtype[,1]
arg_subtype <- arg_subtype[,-1]
## Transform dataframe
arg_subtype <-as.data.frame(t(arg_subtype))
## Normalization
arg_subtype <- decostand(arg_subtype, method = 'hellinger')
arg_bray<-vegdist(arg_subtype, method="bray")
library(ape)
df.pcoa<-pcoa(arg_bray,correction = "cailliez")
df.plot<-data.frame(df.pcoa$vectors)
head(df.plot)
df.plot$sample_type <- gsub("1|2|3|4|5","",row.names(df.plot))
## Import ARG subtype dataset
library(tidyverse)
library(openxlsx)
library(vegan)
arg_subtype <- read.xlsx("../../airborne_arg_uwtp_result/args_oap/ARG/stage_two_output/normalized_cell.subtype.xlsx",
sheet = 1)
download_fq <- read.table("../../airborne_arg_uwtp_result/download_fq/normalized_cell.subtype.txt",
header = TRUE, sep = "\t", quote = "")
View(download_fq)
2:length(download_fq)
colnames(download_fq) <- c('subtype',2:length(download_fq))
## Import ARG subtype dataset
library(tidyverse)
library(openxlsx)
library(vegan)
arg_subtype <- read.xlsx("../../airborne_arg_uwtp_result/args_oap/ARG/stage_two_output/normalized_cell.subtype.xlsx",
sheet = 1)
download_fq <- read.table("../../airborne_arg_uwtp_result/download_fq/normalized_cell.subtype.txt",
header = TRUE, sep = "\t", quote = "")
colnames(download_fq) <- c('subtype',paste(AS,2:length(download_fq)))
colnames(download_fq) <- c('subtype',paste0(AS,2:length(download_fq)))
arg_subtype <- read.xlsx("../../airborne_arg_uwtp_result/args_oap/ARG/stage_two_output/normalized_cell.subtype.xlsx",
sheet = 1)
download_fq <- read.table("../../airborne_arg_uwtp_result/download_fq/normalized_cell.subtype.txt",
header = TRUE, sep = "\t", quote = "")
colnames(download_fq) <- c('subtype',paste0(AS,2:length(download_fq)))
colnames(download_fq) <- c('subtype',paste0('AS',2:length(download_fq)))
colnames(download_fq) <- c('subtype',paste0('AS',1:length(download_fq)))
arg_subtype <- read.xlsx("../../airborne_arg_uwtp_result/args_oap/ARG/stage_two_output/normalized_cell.subtype.xlsx",
sheet = 1)
download_fq <- read.table("../../airborne_arg_uwtp_result/download_fq/normalized_cell.subtype.txt",
header = TRUE, sep = "\t", quote = "")
colnames(download_fq) <- c('subtype',paste0('AS',1:length(download_fq)))
colnames(download_fq) <- c('subtype',paste0('AS',1:length(download_fq)-1))
colnames(download_fq) <- c('subtype',paste0('AS',1:(length(download_fq)-1)))
arg_subtype <- full_join(arg_subtype, download_fq)
arg_subtype[is.na(arg_subtype)] <- 0
row.names(arg_subtype) <- arg_subtype[,1]
arg_subtype <- arg_subtype[,-1]
## Transform dataframe
arg_subtype <-as.data.frame(t(arg_subtype))
## Normalization
arg_subtype <- decostand(arg_subtype, method = 'hellinger')
arg_bray<-vegdist(arg_subtype, method="bray")
library(ape)
df.pcoa<-pcoa(arg_bray,correction = "cailliez")
df.plot<-data.frame(df.pcoa$vectors)
head(df.plot)
df.plot$sample_type <- gsub("1|2|3|4|5","",row.names(df.plot))
df.plot$sample_type <- gsub("[0-9]","",row.names(df.plot))
ggplot(data=df.plot,aes(x=Axis.1,y=Axis.2,color=sample_type))+
geom_point()+
theme_bw()
